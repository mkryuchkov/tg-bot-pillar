<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".Generated.cs" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="YamlDotNet.Serialization" #>
<#@ import namespace="YamlDotNet.Serialization.NamingConventions" #>
<#@ import namespace="TgBotPillar.Common" #>
<#
    var deserializer = new DeserializerBuilder()
        .WithNamingConvention(UnderscoredNamingConvention.Instance) 
        .Build();
    var dirInfo = new DirectoryInfo(this.Host.ResolvePath("States"));
#>
namespace TgBotPillar.Fsm
{
    public enum Trigger
    {
<#
        foreach(var fileInfo in dirInfo.GetFiles("*.yml")) {
            var states = deserializer.Deserialize<
                Dictionary<string, Dictionary<string, object>>>(
                    File.ReadAllText(fileInfo.FullName));
            foreach(var state in states) {
                WriteLine($"        To{state.Key.FirstCharToUpper()},");
            }
        }
#>
    }
}